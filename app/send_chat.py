# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'send-chat.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from multiprocessing import Queue
from PyQt5.QtCore import QTimer, Qt, pyqtSignal
from multiprocessing import Queue
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QTextEdit

class EnterAwareTextEdit(QTextEdit):
    enterPressed = pyqtSignal()

    def keyPressEvent(self, event):
        if event.key() in (Qt.Key_Return, Qt.Key_Enter):
            self.enterPressed.emit()  # Emit signal instead of newline
        else:
            super().keyPressEvent(event)  # Default behavior for other keys

class Ui_MainWindow(object):
    def setupUi(self, MainWindow, queue: Queue):
        self.queue = queue
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(483, 232)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textEdit = EnterAwareTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(20, 50, 441, 87))
        self.textEdit.setObjectName("textEdit")
        self.textEdit.enterPressed.connect(self.send_text)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 150, 441, 41))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.send_text)
        self.pushButton.setDefault(True)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 20, 191, 16))
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 483, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def send_text(self):
        text = self.textEdit.toPlainText()
        self.textEdit.clear()
        self.queue.put(text)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Send"))
        self.label.setText(_translate("MainWindow", "Send messages directly"))

def run_chatbox(queue: Queue):
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow, queue)
    MainWindow.show()
    # Check for queue messages
    def poll_queue():
        if queue.empty():
            ui.label.setText("Send messages directly")
            ui.pushButton.setEnabled(True)
        else:
            ui.label.setText("Queueing message...")
            ui.pushButton.setEnabled(False)
  
    # Poll every 100ms
    timer = QTimer()
    timer.timeout.connect(poll_queue)
    timer.start(100)
    sys.exit(app.exec_())

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    queue = Queue()
    ui.setupUi(MainWindow, queue)
    MainWindow.show()
    sys.exit(app.exec_())
